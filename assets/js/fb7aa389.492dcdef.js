"use strict";(self.webpackChunkgo_4_clouds=self.webpackChunkgo_4_clouds||[]).push([[7842],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>d});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=n.createContext({}),c=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},m=function(e){var a=c(e.components);return n.createElement(o.Provider,{value:a},e.children)},i="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},k=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,p=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),i=c(t),k=l,d=i["".concat(o,".").concat(k)]||i[k]||u[k]||p;return t?n.createElement(d,r(r({ref:a},m),{},{components:t})):n.createElement(d,r({ref:a},m))}));function d(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var p=t.length,r=new Array(p);r[0]=k;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s[i]="string"==typeof e?e:l,r[1]=s;for(var c=2;c<p;c++)r[c]=t[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},2909:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>i,frontMatter:()=>p,metadata:()=>s,toc:()=>c});var n=t(7462),l=(t(7294),t(3905));const p={sidebar_position:7},r="Use ReplicaSet and Deployment",s={unversionedId:"kubernetes/replicaset-and-deployment",id:"kubernetes/replicaset-and-deployment",title:"Use ReplicaSet and Deployment",description:"Orchestrating applications with ReplicaSet and Deployment mechanisms",source:"@site/docs/kubernetes/replicaset-and-deployment.md",sourceDirName:"kubernetes",slug:"/kubernetes/replicaset-and-deployment",permalink:"/docs/kubernetes/replicaset-and-deployment",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Advanced Pod operations",permalink:"/docs/kubernetes/advanced-pods"},next:{title:"Create ConfigMap and Secret",permalink:"/docs/kubernetes/configmaps-and-secrets"}},o={},c=[{value:"Use ReplicaSet to start application",id:"use-replicaset-to-start-application",level:2},{value:"Use Deployment to start application",id:"use-deployment-to-start-application",level:2},{value:"Testing rolling update deployment",id:"testing-rolling-update-deployment",level:2},{value:"Enable autoscaling",id:"enable-autoscaling",level:2}],m={toc:c};function i(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"use-replicaset-and-deployment"},"Use ReplicaSet and Deployment"),(0,l.kt)("p",null,"Orchestrating applications with ReplicaSet and Deployment mechanisms"),(0,l.kt)("h2",{id:"use-replicaset-to-start-application"},"Use ReplicaSet to start application"),(0,l.kt)("p",null,"Check list of namespaces:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get ns\n")),(0,l.kt)("p",null,"Create new ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp")," namespace for Pod instance:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create ns myapp\n")),(0,l.kt)("p",null,"Create a ReplicaSet template manifest for ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp"),": "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="rs-myapp.yaml"',title:'"rs-myapp.yaml"'},"apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: myapp\n  namespace: myapp\nspec:\n  selector:\n    matchLabels:\n      app: myapp\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n      - name: myapp\n        image: ghcr.io/go4clouds/myapp:v1.0\n        ports:\n        - name: http\n          containerPort: 8081\n          protocol: TCP\n")),(0,l.kt)("p",null,"Apply ReplicaSet manifest:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f rs-myapp.yaml\n")),(0,l.kt)("p",null,"Check ReplicaSet and Pod status:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get replicaset,pods -n myapp -o wide\n")),(0,l.kt)("p",null,"Scale up the number of replicas:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl scale -n myapp replicaset myapp --replicas=3\n")),(0,l.kt)("p",null,"Check ReplicaSet and Pod status:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get rs,pods -n myapp -o wide\n")),(0,l.kt)("p",null,"To clean up, remove the entire namespace:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete ns myapp\n")),(0,l.kt)("h2",{id:"use-deployment-to-start-application"},"Use Deployment to start application"),(0,l.kt)("p",null,"Check list of namespaces:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get ns\n")),(0,l.kt)("p",null,"Create a new ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp")," namespace for the Pod instance:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create ns myapp\n")),(0,l.kt)("p",null,"Create a Deployment template manifest for 'myapp': "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="deploy-myapp.yaml"',title:'"deploy-myapp.yaml"'},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myapp\n  namespace: myapp\nspec:\n  selector:\n    matchLabels:\n      app: myapp\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: myapp\n    spec:\n      containers:\n      - name: myapp\n        image: ghcr.io/go4clouds/myapp:v1.0\n        ports:\n        - name: http\n          containerPort: 8081\n          protocol: TCP\n")),(0,l.kt)("p",null,"Apply the Deployment manifest:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f deploy-myapp.yaml\n")),(0,l.kt)("p",null,"Check Deployment, ReplicaSet and Pod status:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get events --sort-by='.lastTimestamp' -n myapp\nkubectl get deploy,rs,pods -n myapp -o wide\n")),(0,l.kt)("p",null,"Scale up the number of replicas:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl scale -n myapp deployment myapp --replicas=5\n")),(0,l.kt)("p",null,"Check the status of Deployment, ReplicaSet, and Pod:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get events --sort-by='.lastTimestamp' -n myapp\nkubectl get deploy,rs,pods -n myapp -o wide\n")),(0,l.kt)("p",null,"To clean up, remove the ",(0,l.kt)("inlineCode",{parentName:"p"},"myapp")," namespace:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete ns myapp\n")),(0,l.kt)("h2",{id:"testing-rolling-update-deployment"},"Testing rolling update deployment"),(0,l.kt)("p",null,"Create ",(0,l.kt)("inlineCode",{parentName:"p"},"webapp")," Deployment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create namespace webapp\nkubectl create deployment -n webapp webapp --image=docker.io/library/nginx:1.16.1\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"See `deploy-webapp.yaml` "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title= deploy-webapp.yaml"',title:"",'deploy-webapp.yaml"':!0},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: webapp\n  name: webapp\n  namespace: webapp\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: webapp\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: webapp\n    spec:\n      containers:\n      - image: docker.io/library/nginx:1.16.1\n        name: nginx\n        resources: {}\nstatus: {}\n"))),(0,l.kt)("p",null,"Check the status of Deployment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get deploy,rs,pods -n webapp\nkubectl rollout history deployment -n webapp webapp\n")),(0,l.kt)("p",null,"Change number of replicas:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl scale deployment -n webapp webapp --replicas=3\n")),(0,l.kt)("p",null,"Annotate changes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl annotate deployment -n webapp webapp kubernetes.io/change-cause="scale up from 1 to 3 replicas"\n')),(0,l.kt)("p",null,"Check the status of Deployment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get deploy,rs,pods -n webapp\n")),(0,l.kt)("p",null,"Update Deployment configuration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'export CONTAINER_NAME=$(kubectl get deployment -n webapp webapp -o jsonpath="{...name}" | cut -d " " -f2)\nkubectl set image deployment -n webapp webapp $CONTAINER_NAME=docker.io/library/nginx:1.20.2\n')),(0,l.kt)("p",null,"Annotate changes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl annotate deployment -n webapp webapp kubernetes.io/change-cause="$CONTAINER_NAME=docker.io/library/nginx:1.20.2"\n')),(0,l.kt)("p",null,"Check the status of Deployment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get deploy,rs,pods -n webapp\n")),(0,l.kt)("p",null,"Check the history of Deployment rollout:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl rollout history --revision=2 -n webapp deployment webapp\n")),(0,l.kt)("p",null,"Change resource limits:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl set resources -n webapp deployment webapp --containers=$CONTAINER_NAME --limits=cpu=200m,memory=512Mi\n")),(0,l.kt)("p",null,"Annotate changes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl annotate deployment -n webapp webapp kubernetes.io/change-cause="changed limits to 200m for cpu and 512Mi for memory"\n')),(0,l.kt)("p",null,"Try to break the Deployment and use a broken container image:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl rollout history deployment -n webapp webapp\nkubectl set image deployment -n webapp webapp $CONTAINER_NAME=docker.io/library/nginx:1.24.3-NON-EXISTING\n")),(0,l.kt)("p",null,"Annotate changes:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl annotate deployment -n webapp webapp kubernetes.io/change-cause="changed Nginx to a non-existing version"\n')),(0,l.kt)("p",null,"Check the status of Deployment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get deploy,rs,pods -n webapp\nkubectl get events --sort-by='.lastTimestamp' -n webapp\n")),(0,l.kt)("p",null,"Roll back changes for the Deployment because the previous update is broken due to the non-existing image ",(0,l.kt)("inlineCode",{parentName:"p"},"nginx:1.24.3-NON-EXISTING"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl rollout undo deployment -n webapp webapp \n")),(0,l.kt)("h2",{id:"enable-autoscaling"},"Enable autoscaling"),(0,l.kt)("p",null,"As a continuation of the previous step, we can enable ",(0,l.kt)("strong",{parentName:"p"},"HorizontalPodAutoscaler"),"."),(0,l.kt)("p",null,"Enable Horizontal Pod Autoscaler for ",(0,l.kt)("inlineCode",{parentName:"p"},"webapp")," deployment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl autoscale deployment -n webapp webapp --min=1 --max=5 --cpu-percent=60\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"See `autoscale.yaml` "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title= autoscale.yaml"',title:"",'autoscale.yaml"':!0},"apiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  creationTimestamp: null\n  name: webapp\nspec:\n  maxReplicas: 5\n  minReplicas: 1\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: webapp\n  targetCPUUtilizationPercentage: 60\nstatus:\n  currentReplicas: 0\n  desiredReplicas: 0\n"))),(0,l.kt)("p",null,"Check the status of HPA:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get hpa webapp -n webapp\n")),(0,l.kt)("p",null,"Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"NAME    REFERENCE          TARGETS   MINPODS   MAXPODS   REPLICAS   AGE\nnginx   Deployment/nginx   0%/60%    1         5         1          36m\n")),(0,l.kt)("p",null,"Check HPA event logs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl describe hpa -n webapp webapp\n")),(0,l.kt)("p",null,"To clean up:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl delete namespace webapp \n")))}i.isMDXComponent=!0}}]);